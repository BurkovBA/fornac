var rnaplot=function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(){function e(e,t){function n(e,t,n){var r=(e.range()[1]-e.range()[0])/(e.domain()[1]-e.domain()[0]),a=(t[1]-t[0])*r,o=(n[1]-n[0]-a)/2;return{scaleFactor:r,scale:d3.scale.linear().domain(t).range([n[0]+o,n[1]-o])}}var r=arguments.length<=2||void 0===arguments[2]?"":arguments[2],a=d3.extent(e),o=d3.extent(t),s=30;""!=r&&(o[1]+=s),a[0]-=c.nucleotideRadius+c.rnaEdgePadding,o[0]-=c.nucleotideRadius+c.rnaEdgePadding,a[1]+=c.nucleotideRadius+c.rnaEdgePadding,o[1]+=c.nucleotideRadius+c.rnaEdgePadding;var i,l=a[1]-a[0],p=o[1]-o[0],f=l-c.width,h=p-c.height;f>h?(u=d3.scale.linear().domain(a).range([0,c.width]),i=n(u,o,[0,c.height]),d=i.scale):(d=d3.scale.linear().domain(o).range([0,c.height]),i=n(d,a,[0,c.width]),u=i.scale);u.range()[0]-u.domain()[0],d.range()[0]-d.domain()[0];return"translate("+-(u.domain()[0]*i.scaleFactor-u.range()[0])+","+-(d.domain()[0]*i.scaleFactor-d.range()[0])+")scale("+i.scaleFactor+")"}function t(e,t){var n=e.selectAll(".rna-base").data(t).enter().append("svg:g").attr("transform",function(e){return"translate("+e.x+","+e.y+")"});n.append("svg:circle").attr("r",c.nucleotideRadius).classed("rna-base",!0);if(c.showNucleotideLabels){n.append("svg:text").text(function(e){return e.name}).attr("text-anchor","middle").attr("dominant-baseline","central").classed("nucleotide-label",!0).append("svg:title").text(function(e){return e.struct_name+":"+e.num})}}function n(e,t){var n=e.selectAll(".rnaLabel").data(t).enter().append("svg:g").attr("transform",function(e){return"translate("+e.x+","+e.y+")"});n.append("svg:text").text(function(e){return e.name}).attr("text-anchor","middle").attr("font-weight","bold").attr("dominant-baseline","central").classed("number-label",!0)}function r(e,t){e.append("svg:text").attr("transform","translate("+u.invert(c.width/2)+","+d.invert(c.height)+")").attr("dy",-10).classed("rna-name",!0).text(t)}function s(e,t){var n={},r=[];t=t.filter(function(e){return"correct"==e.linkType||"incorrect"==e.linkType||"extra"==e.linkType}),e.selectAll("[link-type=extra]").remove();for(var a=0;a<t.length;a++)null!==t[a].source&&null!==t[a].target&&(n[t[a].source.uid]=t[a].source,n[t[a].target.uid]=t[a].target,r.push({source:t[a].source.uid,target:t[a].target.uid,linkType:t[a].linkType,extraLinkType:t[a].extraLinkType}));for(var o=d3.ForceEdgeBundling().nodes(n).edges(r).compatibility_threshold(.8).step_size(.2),s=o(),i=d3.svg.line().x(function(e){return e.x}).y(function(e){return e.y}).interpolate("linear"),a=0;a<s.length;a++){var l=s[a];e.append("path").attr("d",i(l)).style("fill","none").attr("link-type",function(e){return r[a].linkType}).attr("extra-link-type",function(e){return r[a].extraLinkType}).style("stroke-opacity",.4)}}function i(e,t){t=t.filter(function(e){return null!==e.source&&null!==e.target});e.selectAll(".rna-link").data(t).enter().append("svg:line").attr("x1",function(e){return e.source.x}).attr("x2",function(e){return e.target.x}).attr("y1",function(e){return e.source.y}).attr("y2",function(e){return e.target.y}).attr("link-type",function(e){return e.linkType}).attr("extra-link-type",function(e){return e.extraLinkType}).classed("rna-link",!0)}function l(l){l.each(function(l){var u=new o.RNAGraph(l.sequence,l.structure,l.name).recalculateElements().elementsToJson().addName(l.name);l.rnaGraph=u;var d=(0,a.simpleXyCoordinates)(u.pairtable);u.addPositions("nucleotide",d).reinforceStems().reinforceLoops().addExtraLinks(l.extraLinks).addLabels(c.startNucleotideNumber,c.labelInterval);var p=e(u.nodes.map(function(e){return e.x}),u.nodes.map(function(e){return e.y})),f=d3.select(this).append("g").attr("transform",p),h=u.nodes.filter(function(e){return"nucleotide"==e.nodeType}),g=u.nodes.filter(function(e){return"label"==e.nodeType}),m=u.links;i(f,m),t(f,h),n(f,g),r(f,l.name),c.bundleExternalLinks&&s(f,m)})}var u,d,c={width:400,height:400,nucleotideRadius:5,rnaEdgePadding:0,labelInterval:0,showNucleotideLabels:!0,startNucleotideNumber:1,bundleExternalLinks:!1};return l.width=function(e){return arguments.length?(c.width=e,l):c.width},l.height=function(e){return arguments.length?(c.height=e,l):c.height},l.showNucleotideLabels=function(e){return arguments.length?(c.showNucleotideLabels=e,l):c.showNucleotideLabels},l.rnaEdgePadding=function(e){return arguments.length?(c.rnaEdgePadding=e,l):c.rnaEdgePadding},l.nucleotideRadius=function(e){return arguments.length?(c.nucleotideRadius=e,l):c.nucleotideRadius},l.labelInterval=function(e){return arguments.length?(c.labelInterval=e,l):c.labelInterval},l.showNucleotideLabels=function(e){return arguments.length?(c.showNucleotideLabels=e,l):c.showNucleotideLabels},l.startNucleotideNumber=function(e){return arguments.length?(c.startNucleotideNumber=e,l):c.startNucleotideNumber},l.bundleExternalLinks=function(e){return arguments.length?(c.bundleExternalLinks=e,l):c.bundleExternalLinks},l}Object.defineProperty(t,"__esModule",{value:!0}),t.rnaPlot=r;var a=n(9),o=n(7);n(10),n(8);"undefined"==typeof String.prototype.trim&&(String.prototype.trim=function(){return String(this).replace(/^\s+|\s+$/g,"")})},,,,,,,function(e,t,n){"use strict";function r(){var e=(new Date).getTime(),t="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var n=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"==t?n:3&n|8).toString(16)});return t}function a(e,t,n){var a=this;a.type="protein",a.size=t,a.nodes=[{name:"P",num:1,radius:3*Math.sqrt(t),rna:a,nodeType:"protein",structName:e,elemType:"p",size:t,uid:r()}],a.links=[],a.uid=r(),a.addUids=function(e){for(var t=0;t<e.length;t++)a.nodes[t].uid=e[t];return a},a.getUids=function(){uids=[];for(var e=0;e<a.dotbracket.length;e++)uids.push(a.nodes[e].uid);return uids}}function o(e,t,n,a){var o=this;o.type="rna",o.circularizeExternal=!1,0===arguments.length?(o.seq="",o.dotbracket="",o.structName=""):(o.seq=e,o.dotbracket=t,o.structName=n),arguments.length<4&&(a=1),o.circular=!1,o.dotbracket.length>0&&"*"==o.dotbracket[o.dotbracket.length-1]&&(o.dotbracket=o.dotbracket.slice(0,o.dotbracket.length-1),o.circular=!0),o.uid=r(),o.elements=[],o.pseudoknotPairs=[],o.nucsToNodes={},o.addUids=function(e){for(var t=o.nodes.filter(function(e){return"nucleotide"==e.nodeType}),n=0;n<e.length&&n<t.length;n++)t[n].uid=e[n];return o},o.computePairtable=function(){o.pairtable=i.rnaUtilities.dotbracketToPairtable(o.dotbracket)},o.removeBreaks=function(e){for(var t=[],n=-1;(n=e.indexOf("&"))>=0;)t.push(n),e=e.substring(0,n)+"oo"+e.substring(n+1,e.length),console.log("targetString:",e);return{targetString:e,breaks:t}};var s=o.removeBreaks(o.dotbracket);o.dotbracket=s.targetString,o.dotBracketBreaks=s.breaks,s=o.removeBreaks(o.seq),o.seq=s.targetString,o.seqBreaks=s.breaks,o.calculateStartNumberArray=function(){o.startNumberArray=[];for(var e=0;e<o.dotbracket.length;e++)o.startNumberArray.push(a),"o"==o.dotbracket[e]&&(a=-e)},o.calculateStartNumberArray(),o.rnaLength=o.dotbracket.length,(0,i.arraysEqual)(o.dotBracketBreaks,o.seqBreaks)||(console.log("WARNING: Sequence and structure breaks not equal"),console.log("WARNING: Using the breaks in the structure")),console.log("dotBracketBreaks",o.dotBracketBreaks),console.log("sequenceBreaks",o.seqBreaks),o.computePairtable(),o.addPositions=function(e,t){for(var n=o.nodes.filter(function(t){return t.nodeType==e}),r=0;r<n.length;r++)n[r].x=t[r][0],n[r].px=t[r][0],n[r].y=t[r][1],n[r].py=t[r][1];return o},o.breakNodesToFakeNodes=function(){for(var e=o.nodes.filter(function(e){return"nucleotide"==e.nodeType}),t=0;t<e.length;t++)"o"==o.dotbracket[t]&&(e[t].nodeType="middle");for(var t=0;t<o.elements.length;t++){for(var n=!1,r=0;r<o.elements[t][2].length;r++)o.dotBracketBreaks.indexOf(o.elements[t][2][r])>=0&&(n=!0);n?(console.log("broken:",n,o.elements[t][2]),o.elements[t][2].map(function(e){0!=e&&(o.nodes[e-1].elemType="e")})):o.elements[t][2].map(function(e){0!=e&&(o.nodes[e-1].elemType=o.elements[t][0])})}return o},o.getPositions=function(e){for(var t=[],n=o.nodes.filter(function(t){return t.nodeType==e}),r=0;r<n.length;r++)t.push([n[r].x,n[r].y]);return t},o.getUids=function(){for(var e=[],t=0;t<o.dotbracket.length;t++)e.push(o.nodes[t].uid);return e},o.reinforceStems=function(){for(var e=o.pairtable,t=o.elements.filter(function(e){return"s"==e[0]&&e[2].length>=4}),n=0;n<t.length;n++)for(var r=t[n][2],a=r.slice(0,r.length/2),s=0;s<a.length-1;s++)o.addFakeNode([a[s],a[s+1],e[a[s+1]],e[a[s]]]);return o},o.reinforceLoops=function(){for(var e=function(e){return 0!==e&&e<=o.dotbracket.length},t=0;t<o.elements.length;t++)if("s"!=o.elements[t][0]&&(o.circularizeExternal||"e"!=o.elements[t][0])){var n=o.elements[t][2].filter(e);if(console.log("self.elements[i][2]:",o.elements[t][0],o.elements[t][2]),"e"==o.elements[t][0]){var a={name:"",num:-3,radius:0,rna:o,nodeType:"middle",elemType:"f",nucs:[],x:o.nodes[o.rnaLength-1].x,y:o.nodes[o.rnaLength-1].y,px:o.nodes[o.rnaLength-1].px,py:o.nodes[o.rnaLength-1].py,uid:r()},s={name:"",num:-2,radius:0,rna:o,nodeType:"middle",elemType:"f",nucs:[],x:o.nodes[0].x,y:o.nodes[0].y,px:o.nodes[0].px,py:o.nodes[0].py,uid:r()};n.push(o.nodes.length+1),n.push(o.nodes.length+2),o.nodes.push(a),o.nodes.push(s)}console.log("nucs:",n),o.addFakeNode(n)}return o},o.updateLinkUids=function(){for(var e=0;e<o.links.length;e++)o.links[e].uid=o.links[e].source.uid+o.links[e].target.uid;return o},o.addFakeNode=function(e){for(var t=18,n=6.283/(2*e.length),a=t/(2*Math.tan(n)),s="",i=0;i<e.length;i++)s+=o.nodes[e[i]-1].uid;var l={name:"",num:-1,radius:a,rna:o,nodeType:"middle",elemType:"f",nucs:e,uid:s};o.nodes.push(l);var u=0,d=0,c=0;n=3.14159*(e.length-2)/(2*e.length),a=.5/Math.cos(n);for(var p=0;p<e.length;p++)if(!(0===e[p]||e[p]>o.dotbracket.length)){o.links.push({source:o.nodes[e[p]-1],target:o.nodes[o.nodes.length-1],linkType:"fake",value:a,uid:r()}),e.length>4&&o.links.push({source:o.nodes[e[p]-1],target:o.nodes[e[(p+Math.floor(e.length/2))%e.length]-1],linkType:"fake",value:2*a,uid:r()});var f=3.14159*(e.length-2)/e.length,h=2*Math.cos(1.570795-f/2);o.links.push({source:o.nodes[e[p]-1],target:o.nodes[e[(p+2)%e.length]-1],linkType:"fake",value:h});var g=o.nodes[e[p]-1];"x"in g&&(u+=g.x,d+=g.y,c+=1)}return c>0&&(l.x=u/c,l.y=d/c,l.px=l.x,l.py=l.y),o},o.connectFakeNodes=function(){for(var e=18,t=function(e){return"middle"==e.nodeType},n={},r=o.nodes.filter(t),a=new Set,s=1;s<=o.nodes.length;s++)n[s]=[];for(var s=0;s<r.length;s++)for(var i=r[s],l=0;l<i.nucs.length;l++){for(var u=i.nucs[l],d=0;d<n[u].length;d++)if(!a.has(JSON.stringify([n[u][d].uid,i.uid].sort()))){var c=n[u][d].radius+i.radius;o.links.push({source:n[u][d],target:i,value:c/e,linkType:"fake_fake"}),a.add(JSON.stringify([n[u][d].uid,i.uid].sort()))}n[u].push(i)}return o},o.addExtraLinks=function(e){if("undefined"==typeof e)return o;for(var t=0;t<e.length;t++){var n=o.getNodeFromNucleotides(e[t].from),a=o.getNodeFromNucleotides(e[t].to),s={source:n,target:a,linkType:"extra",extraLinkType:e[t].linkType,uid:r()};console.log("newLink:",s),o.links.push(s)}return o},o.elementsToJson=function(){var e=o.pairtable;o.elements;o.nodes=[],o.links=[];var t={};o.elements.sort();for(var n=0;n<o.elements.length;n++)for(var a=o.elements[n][2],s=0;s<a.length;s++)t[a[s]]=o.elements[n][0];for(var n=1;n<=e[0];n++){var i=o.seq[n-1];(o.dotBracketBreaks.indexOf(n-1)>=0||o.dotBracketBreaks.indexOf(n-2)>=0)&&(i=""),o.nodes.push({name:i,num:n+o.startNumberArray[n-1]-1,radius:5,rna:o,nodeType:"nucleotide",structName:o.structName,elemType:t[n],uid:r(),linked:!1})}for(var n=0;n<o.nodes.length;n++)0===n?o.nodes[n].prevNode=null:o.nodes[n].prevNode=o.nodes[n-1],n==o.nodes.length-1?o.nodes[n].nextNode=null:o.nodes[n].nextNode=o.nodes[n+1];for(var n=1;n<=e[0];n++)0!==e[n]&&o.links.push({source:o.nodes[n-1],target:o.nodes[e[n]-1],linkType:"basepair",value:1,uid:r()}),n>1&&-1===o.dotBracketBreaks.indexOf(n-1)&&-1==o.dotBracketBreaks.indexOf(n-2)&&-1==o.dotBracketBreaks.indexOf(n-3)&&(o.links.push({source:o.nodes[n-2],target:o.nodes[n-1],linkType:"backbone",value:1,uid:r()}),o.nodes[n-1].linked=!0);for(var n=0;n<o.pseudoknotPairs.length;n++)o.links.push({source:o.nodes[o.pseudoknotPairs[n][0]-1],target:o.nodes[o.pseudoknotPairs[n][1]-1],linkType:"pseudoknot",value:1,uid:r()});return o.circular&&o.links.push({source:o.nodes[0],target:o.nodes[o.rnaLength-1],linkType:"backbone",value:1,uid:r()}),o},o.ptToElements=function(e,t,n,r){var a=[],s=[n-1],i=[r+1];if(n>r)return[];for(;0===e[n];n++)s.push(n);for(;0===e[r];r--)i.push(r);if(n>r){if(s.push(n),0===t)return[["e",t,s.sort(l)]];for(var u=!1,d=[],c=[],p=0;p<s.length;p++)u?c.push(s[p]):d.push(s[p]),o.dotBracketBreaks.indexOf(s[p])>=0&&(u=!0);return u?[["h",t,s.sort(l)]]:[["h",t,s.sort(l)]]}if(e[n]!=r){var f=s,p=n;for(f.push(p);r>=p;){for(a=a.concat(o.ptToElements(e,t,p,e[p])),f.push(e[p]),p=e[p]+1;0===e[p]&&r>=p;p++)f.push(p);f.push(p)}return f.pop(),f=f.concat(i),f.length>0&&(0===t?a.push(["e",t,f.sort(l)]):a.push(["m",t,f.sort(l)])),a}if(e[n]===r){s.push(n),i.push(r);var h=s.concat(i);h.length>4&&(0===t?a.push(["e",t,s.concat(i).sort(l)]):a.push(["i",t,s.concat(i).sort(l)]))}for(var g=[];e[n]===r&&r>n;)g.push(n),g.push(r),n+=1,r-=1,t+=1;return s=[n-1],i=[r+1],a.push(["s",t,g.sort(l)]),a.concat(o.ptToElements(e,t,n,r))},o.addLabels=function(e,t){if(0===arguments.length&&(e=1,t=10),1===arguments.length&&(t=10),0===t)return o;0>=t&&console.log("The label interval entered in invalid:",t);for(var n=1;n<=o.pairtable[0];n++)if(n%t===0){var a,s,i,l,u,d,c=o.nodes[n-1];1==o.rnaLength?(d=[c.x-15,c.y],u=[c.x-15,c.y]):(i=1==n?o.nodes[o.rnaLength-1]:o.nodes[n-2],l=n==o.rnaLength?o.nodes[0]:o.nodes[n],0!==o.pairtable[l.num]&&0!==o.pairtable[i.num]&&0!==o.pairtable[c.num]&&(i=l=o.nodes[o.pairtable[c.num]-1]),0===o.pairtable[c.num]||0!==o.pairtable[l.num]&&0!==o.pairtable[i.num]?(d=[l.x-c.x,l.y-c.y],u=[i.x-c.x,i.y-c.y]):(d=[c.x-l.x,c.y-l.y],u=[c.x-i.x,c.y-i.y]));var p=[d[0]+u[0],d[1]+u[1]],f=Math.sqrt(p[0]*p[0]+p[1]*p[1]),h=[p[0]/f,p[1]/f],g=[-15*h[0],-15*h[1]],a=o.nodes[n-1].x+g[0],s=o.nodes[n-1].y+g[1],m={name:n+o.startNumberArray[n-1]-1,num:-1,radius:6,rna:o,nodeType:"label",structName:o.structName,elemType:"l",x:a,y:s,px:a,py:s,uid:r()},k={source:o.nodes[n-1],target:m,value:1,linkType:"label_link",uid:r()};o.nodes.push(m),o.links.push(k)}return o},o.recalculateElements=function(){if(o.removePseudoknots(),o.elements=o.ptToElements(o.pairtable,0,1,o.dotbracket.length),o.circular&&(externalLoop=o.elements.filter(function(e){return"e"==e[0]?!0:void 0}),externalLoop.length>0)){eloop=externalLoop[0],nucs=eloop[2].sort(l),prev=nucs[0],hloop=!0,numGreater=0;for(var e=1;e<nucs.length;e++)nucs[e]-prev>1&&(numGreater+=1),prev=nucs[e];1==numGreater?eloop[0]="h":2==numGreater?eloop[0]="i":eloop[0]="m"}return o},o.reassignLinkUids=function(){for(var e,e=0;e<o.links.length;e++)o.links[e].uid=o.links[e].source.uid+o.links[e].target.uid;return o},o.removePseudoknots=function(){return o.pairtable.length>1?o.pseudoknotPairs=i.rnaUtilities.removePseudoknotsFromPairtable(o.pairtable):o.pseudoknotPairs=[],o},o.addPseudoknots=function(){for(var e=o.pairtable,t=o.pseudoknotPairs,n=0;n<t.length;n++)e[t[n][0]]=t[n][1],e[t[n][1]]=t[n][0];return o.pseudoknotPairs=[],o},o.addName=function(e){return"undefined"==typeof e?(o.name="",o):(o.name=e,o)},o.rnaLength>0&&o.recalculateElements()}function s(e){for(var t={},n=[],s=[],i=0;i<e.molecules.length;i++){var l,u=e.molecules[i];"rna"==u.type?(l=new o(u.seq,u.ss,u.header),l.circularizeExternal=!0,l.elementsToJson().addPositions("nucleotide",u.positions).addLabels().reinforceStems().reinforceLoops()):"protein"==u.type&&(l=new a(u.header,u.size)),l.addUids(u.uids);for(var d=0;d<l.nodes.length;d++)t[l.nodes[d].uid]=l.nodes[d];n.push(l)}for(var i=0;i<e.extraLinks.length;i++)link=e.extraLinks[i],link.source=t[link.source],link.target=t[link.target],link.uid=r(),s.push(link);return{graphs:n,extraLinks:s}}Object.defineProperty(t,"__esModule",{value:!0}),t.ProteinGraph=a,t.RNAGraph=o,t.moleculesToJson=s;var i=n(8),l=function(e,t){return e-t};"undefined"==typeof String.prototype.trim&&(String.prototype.trim=function(){return String(this).replace(/^\s+|\s+$/g,"")})},function(e,t){"use strict";function n(e,t){if(e===t)return!0;if(null===e||null===t)return!1;if(e.length!=t.length)return!1;for(var n=0;n<e.length;++n)if(e[n]!==t[n])return!1;return!0}function r(){var e=this;e.bracketLeft="([{<ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),e.bracketRight=")]}>abcdefghijklmnopqrstuvwxyz".split(""),e.inverseBrackets=function(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=n;return t},e.maximumMatching=function(e){for(var t=e[0],n=0,r=new Array(t+1),a=0;t>=a;a++){r[a]=new Array(t+1);for(var o=a;t>=o;o++)r[a][o]=0}for(var s=0,a=t-n-1;a>0;a--)for(var o=a+n+1;t>=o;o++){s=r[a][o-1];for(var i=o-n-1;i>=a;i--)e[i]===o&&(s=Math.max(s,(i>a?r[a][i-1]:0)+1+(o-i-1>0?r[i+1][o-1]:0)));r[a][o]=s}return s=r[1][t],r},e.backtrackMaximumMatching=function(t,n){var r=Array.apply(null,Array(t.length)).map(function(){return 0});return e.mmBt(t,r,n,1,t.length-1),r},e.mmBt=function(t,n,r,a,o){var s=t[a][o],i=0;if(!(i>o-a-1)){if(t[a][o-1]==s)return void e.mmBt(t,n,r,a,o-1);for(var l=o-i-1;l>=a;l--)if(r[o]===l){var u=l>a?t[a][l-1]:0,d=o-l-1>0?t[l+1][o-1]:0;if(u+d+1==s)return n[l]=o,n[o]=l,l>a&&e.mmBt(t,n,r,a,l-1),void e.mmBt(t,n,r,l+1,o-1)}console.log("FAILED!!!"+a+","+o+": backtracking failed!")}},e.dotbracketToPairtable=function(t){var n=Array.apply(null,new Array(t.length+1)).map(Number.prototype.valueOf,0);n[0]=t.length;for(var r={},a=0;a<e.bracketLeft.length;a++)r[a]=[];for(var o=e.inverseBrackets(e.bracketLeft),s=e.inverseBrackets(e.bracketRight),a=0;a<t.length;a++){var i=t[a],l=a+1;if("."==i||"o"==i)n[l]=0;else if(i in o)r[o[i]].push(l);else{if(!(i in s))throw"Unknown symbol in dotbracket string";var u=r[s[i]].pop();n[l]=u,n[u]=l}}for(var d in r)if(r[d].length>0)throw"Unmatched base at position "+r[d][0];return n},e.insertIntoStack=function(e,t,n){for(var r=0;e[r].length>0&&e[r][e[r].length-1]<n;)r+=1;return e[r].push(n),r},e.deleteFromStack=function(e,t){for(var n=0;0===e[n].length||e[n][e[n].length-1]!=t;)n+=1;return e[n].pop(),n},e.pairtableToDotbracket=function(t){for(var n={},r=0;r<t[0];r++)n[r]=[];for(var r,a={},o="",r=1;r<t[0]+1;r++){if(0!==t[r]&&t[r]in a)throw"Invalid pairtable contains duplicate entries";a[t[r]]=!0,o+=0===t[r]?".":t[r]>r?e.bracketLeft[e.insertIntoStack(n,r,t[r])]:e.bracketRight[e.deleteFromStack(n,r)]}return o},e.findUnmatched=function(t,n,r){for(var a,o=[],s=[],i=n,l=r,a=n;r>=a;a++)0!==t[a]&&(t[a]<n||t[a]>r)&&s.push([a,t[a]]);for(var a=i;l>=a;a++){for(;0===t[a]&&l>=a;)a++;for(r=t[a];t[a]===r;)a++,r--;o=o.concat(e.findUnmatched(t,a,r))}return s.length>0&&o.push(s),o},e.removePseudoknotsFromPairtable=function(t){for(var n=e.maximumMatching(t),r=e.backtrackMaximumMatching(n,t),a=[],o=1;o<t.length;o++)t[o]<o||r[o]!=t[o]&&(a.push([o,t[o]]),t[t[o]]=0,t[o]=0);return a}}Object.defineProperty(t,"__esModule",{value:!0}),t.arraysEqual=n,t.RNAUtilities=r;t.rnaUtilities=new r},function(e,t){"use strict";function n(e){var t,n,r,a=0,o=100,s=100,i=15,l=[],u=[];n=e[0];var d=Array.apply(null,new Array(n+5)).map(Number.prototype.valueOf,0),c=Array.apply(null,new Array(16+Math.floor(n/5))).map(Number.prototype.valueOf,0),p=Array.apply(null,new Array(16+Math.floor(n/5))).map(Number.prototype.valueOf,0),f=0,h=0,g=Math.PI/2,m=function v(e,t,n){var r,a,o,s,i,l,u,m,k,y,b,x,N=2,T=0,L=0,w=Array.apply(null,new Array(3+2*Math.floor((t-e)/5))).map(Number.prototype.valueOf,0);for(r=e-1,t++;e!=t;)if(a=n[e],a&&0!=e){N+=2,o=e,s=a,w[++T]=o,w[++T]=s,e=a+1,i=o,l=s,m=0;do o++,s--,m++;while(n[o]==s&&n[o]>o);if(u=m-2,m>=2&&(d[i+1+u]+=g,d[l-1-u]+=g,d[i]+=g,d[l]+=g,m>2))for(;u>=1;u--)d[i+u]=Math.PI,d[l-u]=Math.PI;p[++h]=m,s>=o&&v(o,s,n)}else e++,N++,L++;for(x=Math.PI*(N-2)/N,w[++T]=t,k=0>r?0:r,y=1;T>=y;y++){for(b=w[y]-k,u=0;b>=u;u++)d[k+u]+=x;if(y>T)break;k=w[++y]}c[++f]=L};m(0,n+1,e),c[f]-=2,r=a,l[0]=o,u[0]=s;var k=[];for(k.push([l[0],u[0]]),t=1;n>t;t++)l[t]=l[t-1]+i*Math.cos(r),u[t]=u[t-1]+i*Math.sin(r),k.push([l[t],u[t]]),r+=Math.PI-d[t+1];return k}Object.defineProperty(t,"__esModule",{value:!0}),t.simpleXyCoordinates=n},function(e,t){"use strict";function n(e){var t=this;return t.colorsText=e,t.parseRange=function(e){for(var t=e.split(","),n=[],r=0;r<t.length;r++){var a=t[r].split("-");if(1==a.length)n.push(parseInt(a[0]));else if(2==a.length)for(var o=parseInt(a[0]),s=parseInt(a[1]),i=o;s>=i;i++)n.push(i);else console.log("Malformed range (too many dashes):",e)}return n},t.parseColorText=function(e){for(var n=e.split("\n"),r="",a=1,o={colorValues:{"":{}},range:["white","steelblue"]},s=[],i=0;i<n.length;i++)if(">"!=n[i][0]){words=n[i].trim().split(/[\s]+/);for(var l=0;l<words.length;l++)if(isNaN(words[l])){if(0===words[l].search("range")){parts=words[l].split("="),partsRight=parts[1].split(":"),o.range=[partsRight[0],partsRight[1]];continue}if(0==words[l].search("domain")){parts=words[l].split("="),partsRight=parts[1].split(":"),o.domain=[partsRight[0],partsRight[1]];continue}parts=words[l].split(":"),nums=t.parseRange(parts[0]),color=parts[1];for(var u=0;u<nums.length;u++)isNaN(color)?o.colorValues[r][nums[u]]=color:(o.colorValues[r][nums[u]]=+color,s.push(Number(color)))}else o.colorValues[r][a]=Number(words[l]),a+=1,s.push(Number(words[l]))}else r=n[i].trim().slice(1),a=1,o.colorValues[r]={};return"domain"in o||(o.domain=[Math.min.apply(null,s),Math.max.apply(null,s)]),t.colorsJson=o,t},t.normalizeColors=function(){var e;for(var n in t.colorsJson){var r=Number.MAX_VALUE,a=Number.MIN_VALUE;for(var o in t.colorsJson.colorValues[n])e=t.colorsJson.colorValues[n][o],"number"==typeof e&&(r>e&&(r=e),e>a&&(a=e));for(o in t.colorsJson.colorValues[n])e=t.colorsJson.colorValues[n][o],"number"==typeof e&&(t.colorsJson.colorValues[n][o]=(e-r)/(a-r))}return t},t.parseColorText(t.colorsText),t}Object.defineProperty(t,"__esModule",{value:!0}),t.ColorScheme=n}]);